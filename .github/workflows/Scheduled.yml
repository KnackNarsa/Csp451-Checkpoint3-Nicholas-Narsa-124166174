name: Daily Dependency Audit

on:
  schedule:
    - cron: "30 6 * * *"
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Csp451-Checkpoint3-Nicholas-Narsa-124166174/package-lock.json

      - name: Install dependencies
        working-directory: Csp451-Checkpoint3-Nicholas-Narsa-124166174
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run audit
        working-directory: Csp451-Checkpoint3-Nicholas-Narsa-124166174
        run: |
          npm audit --json > audit.json || true

      - name: Create GitHub issue if vulnerabilities are found
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'Csp451-Checkpoint3-Nicholas-Narsa-124166174/audit.json';
            const data = JSON.parse(fs.readFileSync(path, 'utf8'));

            let summary = data?.metadata?.vulnerabilities || data?.vulnerabilities || {};
            let total = typeof summary.total === 'number'
              ? summary.total
              : Object.values(summary).reduce((a, b) => a + (typeof b === 'number' ? b : b?.total || 0), 0);

            if (!total || total === 0) {
              core.info('✅ No vulnerabilities found.');
              return;
            }

            const title = `Security audit found ${total} vulnerabilities`;
            const body = [
              'Automated daily **npm audit** detected vulnerabilities.',
              '',
              '### Summary',
              '```json',
              JSON.stringify(summary, null, 2),
              '```',
              '',
              '### Details',
              `Check the full audit log in \`${path}\`.`,
              '',
              `Generated on ${new Date().toISOString()}`
            ].join('\n');

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security-audit'
            });

            if (issues.length > 0) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issues[0].number,
                title,
                body
              });
              core.info(`🔁 Updated existing issue #${issues[0].number}`);
            } else {
              const { data: issue } = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ['security-audit']
              });
              core.info(`🆕 Created new issue #${issue.number}`);
            }
