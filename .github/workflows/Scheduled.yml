name: Daily Dependency Audit

on:
  # Runs every day at 06:30 UTC (â‰ˆ 2:30 AM in America/Toronto during EDT)
  schedule:
    - cron: "30 6 * * *"
  # Let you run it on demand from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies (prefer clean install)
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi

      # Run the audit and always continue (we'll handle results ourselves)
      - name: Run npm audit (JSON)
        run: |
          npm audit --json > audit.json || true

      - name: Create or update issue if vulnerabilities found
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('audit.json', 'utf8'));

            // Try to compute a total across npm versions (metadata.vulnerabilities is common)
            let summary = data?.metadata?.vulnerabilities || data?.vulnerabilities || {};
            let total = 0;
            if (typeof summary.total === 'number') {
              total = summary.total;
            } else if (summary && typeof summary === 'object') {
              total = Object.values(summary).reduce((a, b) => a + (typeof b === 'number' ? b : (b?.total || 0)), 0);
            }

            if (!total || total === 0) {
              core.info('No vulnerabilities found.');
              return;
            }

            const title = `Security audit found ${total} vulnerabilities`;
            const body = [
              'Automated daily **npm audit** detected vulnerabilities.',
              '',
              '### Summary',
              '```json',
              JSON.stringify(summary, null, 2),
              '```',
              '',
              '### Details',
              'The full raw `npm audit --json` output is attached as an artifact or can be re-run locally.',
              '',
              `Generated by GitHub Actions on ${new Date().toISOString()}.`
            ].join('\n');

            // Reuse an open issue with label "security-audit" if it exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security-audit'
            });

            if (issues.length > 0) {
              const issue = issues[0];
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                title,
                body
              });
              core.info(`Updated existing issue #${issue.number}.`);
            } else {
              const { data: issue } = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ['security-audit']
              });
              core.info(`Created issue #${issue.number}.`);
            }
