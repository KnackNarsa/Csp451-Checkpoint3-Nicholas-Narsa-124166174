name: Scheduled Dependency Audit

on:
  schedule:
    - cron: "0 0 * * *"   # nightly 00:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  security-events: write

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run npm audit (moderate+)
        run: npm audit --audit-level=moderate --json > audit.json || true

      - name: Create or update issue for high/critical vulns
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('audit.json', 'utf8'));
            const vulns = data?.metadata?.vulnerabilities || data?.vulnerabilities || {};
            const high = Number(vulns.high || 0);
            const critical = Number(vulns.critical || 0);
            const totalHC = high + critical;

            if (totalHC === 0) {
              core.info('‚úÖ No high/critical vulnerabilities found.');
              return;
            }

            const title = `Security audit: ${high} high / ${critical} critical vulnerabilities`;
            const body = [
              'Automated nightly `npm audit --audit-level=moderate` detected **high/critical** vulnerabilities.',
              '',
              '### Summary',
              '```json',
              JSON.stringify({ high, critical, all: vulns }, null, 2),
              '```',
              '',
              'Re-run locally with:',
              '```bash',
              'npm audit --audit-level=moderate',
              '```',
              '',
              `Generated by GitHub Actions on ${new Date().toISOString()}.`
            ].join('\n');

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security-audit'
            });

            if (issues.length) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issues[0].number,
                title,
                body
              });
              core.info(`üîÅ Updated existing issue #${issues[0].number}.`);
            } else {
              const { data: issue } = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ['security-audit']
              });
              core.info(`üÜï Created issue #${issue.number}.`);
            }

      - name: Upload audit.json as artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-json
          path: audit.json
          if-no-files-found: ignore
